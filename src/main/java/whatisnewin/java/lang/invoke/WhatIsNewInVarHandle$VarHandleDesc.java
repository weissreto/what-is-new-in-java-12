package whatisnewin.java.lang.invoke;

import java.lang.invoke.VarHandle.VarHandleDesc;
import java.lang.constant.ClassDesc;
import java.lang.invoke.VarHandle;
import java.lang.invoke.MethodHandles.Lookup;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link VarHandleDesc}
 * that were newly introduced in Java version 12.<br>
 *
 * {@link VarHandleDesc} is a completely new class.
 * @since 12
 * @see VarHandleDesc
 */
public final class WhatIsNewInVarHandle$VarHandleDesc
{
  /**
   * Example call to new method {@link VarHandleDesc#ofField(ClassDesc, String, ClassDesc)}.
   * @since 12
   * @see VarHandleDesc#ofField(ClassDesc, String, ClassDesc)
   */
  public static VarHandleDesc ofField(ClassDesc declaringClass, String name, ClassDesc fieldType)
  {
    VarHandleDesc result = VarHandleDesc.ofField(declaringClass, name, fieldType);
    return result;
  }

  /**
   * Example call to new method {@link VarHandleDesc#varType()}.
   * @since 12
   * @see VarHandleDesc#varType()
   */
  public ClassDesc varType()
  {
    VarHandleDesc testee = $$$();

    ClassDesc result = testee.varType();
    return result;
  }

  /**
   * Example call to new method {@link VarHandleDesc#resolveConstantDesc(Lookup)}.
   * @since 12
   * @see VarHandleDesc#resolveConstantDesc(Lookup)
   */
  public VarHandle resolveConstantDesc(Lookup lookup) throws ReflectiveOperationException
  {
    VarHandleDesc testee = $$$();

    VarHandle result = testee.resolveConstantDesc(lookup);
    return result;
  }

  /**
   * Example call to new method {@link VarHandleDesc#ofStaticField(ClassDesc, String, ClassDesc)}.
   * @since 12
   * @see VarHandleDesc#ofStaticField(ClassDesc, String, ClassDesc)
   */
  public static VarHandleDesc ofStaticField(ClassDesc declaringClass, String name, ClassDesc fieldType)
  {
    VarHandleDesc result = VarHandleDesc.ofStaticField(declaringClass, name, fieldType);
    return result;
  }

  /**
   * Example call to new method {@link VarHandleDesc#ofArray(ClassDesc)}.
   * @since 12
   * @see VarHandleDesc#ofArray(ClassDesc)
   */
  public static VarHandleDesc ofArray(ClassDesc arrayClass)
  {
    VarHandleDesc result = VarHandleDesc.ofArray(arrayClass);
    return result;
  }

  private VarHandleDesc $$$()
  {
    return null;
  }
}
