package whatisnewin.java.lang.invoke;

import java.lang.invoke.TypeDescriptor.OfField;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link OfField}
 * that were newly introduced in Java versions 12.<br>
 *
 * {@link OfField} is a completely new class
 * @since 12
 * @see OfField
 */
public final class WhatIsNewInTypeDescriptor$OfField<F extends OfField<F>>
{
  /**
   * Example call to new method {@link OfField#isArray}
   * @since 12
   * @see OfField#isArray
   */
  public boolean isArray()
  {
    OfField<F> testee = $$$();

    boolean result = testee.isArray();
    return result;
  }

  /**
   * Example call to new method {@link OfField#arrayType}
   * @since 12
   * @see OfField#arrayType
   */
  public F arrayType()
  {
    OfField<F> testee = $$$();

    F result = testee.arrayType();
    return result;
  }

  /**
   * Example call to new method {@link OfField#componentType}
   * @since 12
   * @see OfField#componentType
   */
  public F componentType()
  {
    OfField<F> testee = $$$();

    F result = testee.componentType();
    return result;
  }

  /**
   * Example call to new method {@link OfField#isPrimitive}
   * @since 12
   * @see OfField#isPrimitive
   */
  public boolean isPrimitive()
  {
    OfField<F> testee = $$$();

    boolean result = testee.isPrimitive();
    return result;
  }

  private OfField $$$()
  {
    return null;
  }
}
