package whatisnewin.java.lang.constant;

import java.lang.constant.DirectMethodHandleDesc.Kind;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link Kind}
 * that were newly introduced in Java versions 12.<br>
 *
 * {@link Kind} is a completely new class
 * @since 12
 * @see Kind
 */
public final class WhatIsNewInDirectMethodHandleDesc$Kind
{
  /**
   * Example usage of the new field {@link Kind#STATIC}
   * @since 12
   * @see Kind#STATIC
   */
  public static  final Kind STATIC = Kind.STATIC;

  /**
   * Example usage of the new field {@link Kind#INTERFACE_STATIC}
   * @since 12
   * @see Kind#INTERFACE_STATIC
   */
  public static  final Kind INTERFACE_STATIC = Kind.INTERFACE_STATIC;

  /**
   * Example usage of the new field {@link Kind#VIRTUAL}
   * @since 12
   * @see Kind#VIRTUAL
   */
  public static  final Kind VIRTUAL = Kind.VIRTUAL;

  /**
   * Example usage of the new field {@link Kind#INTERFACE_VIRTUAL}
   * @since 12
   * @see Kind#INTERFACE_VIRTUAL
   */
  public static  final Kind INTERFACE_VIRTUAL = Kind.INTERFACE_VIRTUAL;

  /**
   * Example usage of the new field {@link Kind#SPECIAL}
   * @since 12
   * @see Kind#SPECIAL
   */
  public static  final Kind SPECIAL = Kind.SPECIAL;

  /**
   * Example usage of the new field {@link Kind#INTERFACE_SPECIAL}
   * @since 12
   * @see Kind#INTERFACE_SPECIAL
   */
  public static  final Kind INTERFACE_SPECIAL = Kind.INTERFACE_SPECIAL;

  /**
   * Example usage of the new field {@link Kind#CONSTRUCTOR}
   * @since 12
   * @see Kind#CONSTRUCTOR
   */
  public static  final Kind CONSTRUCTOR = Kind.CONSTRUCTOR;

  /**
   * Example usage of the new field {@link Kind#GETTER}
   * @since 12
   * @see Kind#GETTER
   */
  public static  final Kind GETTER = Kind.GETTER;

  /**
   * Example usage of the new field {@link Kind#SETTER}
   * @since 12
   * @see Kind#SETTER
   */
  public static  final Kind SETTER = Kind.SETTER;

  /**
   * Example usage of the new field {@link Kind#STATIC_GETTER}
   * @since 12
   * @see Kind#STATIC_GETTER
   */
  public static  final Kind STATIC_GETTER = Kind.STATIC_GETTER;

  /**
   * Example usage of the new field {@link Kind#STATIC_SETTER}
   * @since 12
   * @see Kind#STATIC_SETTER
   */
  public static  final Kind STATIC_SETTER = Kind.STATIC_SETTER;

  /**
   * Example usage of the new field {@link Kind#refKind}
   * @since 12
   * @see Kind#refKind
   */
  public  final int refKind = $$$().refKind;

  /**
   * Example usage of the new field {@link Kind#isInterface}
   * @since 12
   * @see Kind#isInterface
   */
  public  final boolean isInterface = $$$().isInterface;

  /**
   * Example call to new method {@link Kind#valueOf}
   * @since 12
   * @see Kind#valueOf
   */
  public static Kind valueOf(String name)
  {
    Kind result = Kind.valueOf(name);
    return result;
  }

  /**
   * Example call to new method {@link Kind#valueOf}
   * @since 12
   * @see Kind#valueOf
   */
  public static Kind valueOf(int refKind)
  {
    Kind result = Kind.valueOf(refKind);
    return result;
  }

  /**
   * Example call to new method {@link Kind#valueOf}
   * @since 12
   * @see Kind#valueOf
   */
  public static Kind valueOf(int refKind, boolean isInterface)
  {
    Kind result = Kind.valueOf(refKind, isInterface);
    return result;
  }

  /**
   * Example call to new method {@link Kind#values}
   * @since 12
   * @see Kind#values
   */
  public static Kind[] values()
  {
    Kind[] result = Kind.values();
    return result;
  }

  private Kind $$$()
  {
    return null;
  }
}
