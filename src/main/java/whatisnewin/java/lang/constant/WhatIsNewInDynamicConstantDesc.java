package whatisnewin.java.lang.constant;

import java.lang.constant.DynamicConstantDesc;
import java.lang.constant.ConstantDesc;
import java.lang.constant.DirectMethodHandleDesc;
import java.lang.constant.ClassDesc;
import java.util.List;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link DynamicConstantDesc}
 * that were newly introduced in Java version 12.<br>
 *
 * {@link DynamicConstantDesc} is a completely new class.
 * @since 12
 * @see DynamicConstantDesc
 */
public final class WhatIsNewInDynamicConstantDesc<T>
{
  /**
   * Example call to new method {@link DynamicConstantDesc#ofCanonical(DirectMethodHandleDesc, String, ClassDesc, java.lang.constant.ConstantDesc[])}.
   * @since 12
   * @see DynamicConstantDesc#ofCanonical(DirectMethodHandleDesc, String, ClassDesc, java.lang.constant.ConstantDesc[])
   */
  public static <T> ConstantDesc ofCanonical(DirectMethodHandleDesc bootstrapMethod, String constantName, ClassDesc constantType, ConstantDesc[] bootstrapArgs)
  {
    ConstantDesc result = DynamicConstantDesc.ofCanonical(bootstrapMethod, constantName, constantType, bootstrapArgs);
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#ofNamed(DirectMethodHandleDesc, String, ClassDesc, ConstantDesc...)}.
   * @since 12
   * @see DynamicConstantDesc#ofNamed(DirectMethodHandleDesc, String, ClassDesc, ConstantDesc...)
   */
  public static <T> DynamicConstantDesc<T> ofNamed(DirectMethodHandleDesc bootstrapMethod, String constantName, ClassDesc constantType, ConstantDesc... bootstrapArgs)
  {
    DynamicConstantDesc<T> result = DynamicConstantDesc.ofNamed(bootstrapMethod, constantName, constantType, bootstrapArgs);
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#of(DirectMethodHandleDesc, ConstantDesc...)}.
   * @since 12
   * @see DynamicConstantDesc#of(DirectMethodHandleDesc, ConstantDesc...)
   */
  public static <T> DynamicConstantDesc<T> of(DirectMethodHandleDesc bootstrapMethod, ConstantDesc... bootstrapArgs)
  {
    DynamicConstantDesc<T> result = DynamicConstantDesc.of(bootstrapMethod, bootstrapArgs);
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#of(DirectMethodHandleDesc)}.
   * @since 12
   * @see DynamicConstantDesc#of(DirectMethodHandleDesc)
   */
  public static <T> DynamicConstantDesc<T> of(DirectMethodHandleDesc bootstrapMethod)
  {
    DynamicConstantDesc<T> result = DynamicConstantDesc.of(bootstrapMethod);
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#constantName()}.
   * @since 12
   * @see DynamicConstantDesc#constantName()
   */
  public String constantName()
  {
    DynamicConstantDesc<T> testee = $$$();

    String result = testee.constantName();
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#constantType()}.
   * @since 12
   * @see DynamicConstantDesc#constantType()
   */
  public ClassDesc constantType()
  {
    DynamicConstantDesc<T> testee = $$$();

    ClassDesc result = testee.constantType();
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#bootstrapMethod()}.
   * @since 12
   * @see DynamicConstantDesc#bootstrapMethod()
   */
  public DirectMethodHandleDesc bootstrapMethod()
  {
    DynamicConstantDesc<T> testee = $$$();

    DirectMethodHandleDesc result = testee.bootstrapMethod();
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#bootstrapArgs()}.
   * @since 12
   * @see DynamicConstantDesc#bootstrapArgs()
   */
  public ConstantDesc[] bootstrapArgs()
  {
    DynamicConstantDesc<T> testee = $$$();

    ConstantDesc[] result = testee.bootstrapArgs();
    return result;
  }

  /**
   * Example call to new method {@link DynamicConstantDesc#bootstrapArgsList()}.
   * @since 12
   * @see DynamicConstantDesc#bootstrapArgsList()
   */
  public List<ConstantDesc> bootstrapArgsList()
  {
    DynamicConstantDesc<T> testee = $$$();

    List<ConstantDesc> result = testee.bootstrapArgsList();
    return result;
  }

  private DynamicConstantDesc<T> $$$()
  {
    return null;
  }
}
